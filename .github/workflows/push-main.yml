name: 'Main Branch Operations'

on:
  push:
    branches:
      - 'main'

env:
  NODE_VERSION: 18.x

jobs:
  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Lint Code
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test

      - name: Build Project
        run: npm run build

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git User
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Install Dependencies
        run: npm ci

      - name: Create Release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_server:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v3.4.5
        with:
          REMOTE_PORT: ${{ secrets.SSH_REMOTE_PORT }}
          TARGET: ${{ secrets.SSH_STAGING_TARGET }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_STAGING_PRIVATEKEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: ""
          REMOTE_HOST: ${{ secrets.SSH_STAGING_HOST }}
          REMOTE_USER: ${{ secrets.SSH_STAGING_USER }}
          REMOTE_PORT: ${{ secrets.SSH_REMOTE_PORT }}
          TARGET: ${{ secrets.SSH_STAGING_TARGET }}
