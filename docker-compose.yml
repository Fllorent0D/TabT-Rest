version: '3'
services:
  app-notification:
    build:
      context: .
      dockerfile: apps/app-notifications/Dockerfile
    depends_on:
      - cache
    environment:
      REDIS_HOST: cache
      REDIS_PORT: 6379
  data-importer:
    build:
      context: .
      dockerfile: apps/data-aftt-importer/Dockerfile
    depends_on:
      - db
      - cache
    environment:
      DATABASE_URL: 'postgres://postgres:password@pg:5432/postgres'
      REDIS_HOST: cache
      REDIS_PORT: 6379
      SYNC_MEMBERS_ON_START: true
      AFTT_DATA_BASE_URL: 'https://data.aftt.be'
      AFTT_DATA_USERNAME: beping
      AFTT_DATA_PASSWORD: T9jL@4kW!rD8zE
  tabt-rest:
    build :
      context: .
      dockerfile: apps/tabt-rest/Dockerfile
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", 'timeout', '10s', 'bash', '-c', ':>', '/dev/tcp/127.0.0.1/3050', '||', 'exit', '1']
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
        - 3050:3050
    depends_on:
      - db
      - cache
      - torproxy
    environment:
      DATABASE_URL: postgres://postgres:password@db:5432/postgres
      REDIS_HOST: cache
      REDIS_PORT: 6379
      AFTT_DATA_USERNAME: beping
      AFTT_DATA_PASSWORD: T9jL@4kW!rD8zE
      NODE_ENV: dev
      AFTT_WSDL: https://api.aftt.be/?wsdl
      VTLL_WSDL: https://api.aftt.be/?wsdl
      USE_SOCKS_PROXY: false
      PORT: 3050
      SOCKS_PROXY_HOST: torproxy
      SOCKS_PROXY_PORT: 9050
      API_PREFIX: api
      CURRENT_SEASON: 24
      STATIC_PREFIX: static
      HOST: http://localhost:3004
      BEPING_NOTIFICATION_URL: http://localhost:3000/
      BEPING_NOTIFICATION_CONSUMER_KEY: beping
      BEPING_NOTIFICATION_CONSUMER_SECRET: test
  torproxy:
    image: dockage/tor-privoxy
    ports:
      - "9050:9050"
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    ports:
      - "5432:5432"
  cache:
    image: redis:6
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    ports:
      - "6379:6379"
    volumes:
      - cache-data:/data

volumes:
  db-data:
  cache-data:
